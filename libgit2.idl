[  
       uuid(DD90626F-21D2-497B-8A73-B45ED9FA2969),  // Any valid GUID 
       helpstring("libgit2 Type Library"), 
       //lcid(0x0409),                    // This is a locale    
       version(1.0) 
] library libgit2 // This will be the package name
{ 
   //importlib("stdole.tlb");
   import "time.h";
   #include "git2.h";      // The original header file
[
    uuid(B62369B3-06FC-4B7F-97C8-6CA18F3377AB),
    dllname("git2.dll")
]
module libgit2  // This will be the name of the ExternalLibrary subclass
{
	typedef struct git_oid_shorten git_oid_shorten;

    [entry("git_libgit2_version")]
	void git_libgit2_version([in] int *major, [in] int *minor, [in] int *rev);

    [entry("git_libgit2_features")]
	int git_libgit2_features(void);

    [entry("git_libgit2_opts")]
        [vararg] int git_libgit2_opts([in] int option, [in] SAFEARRAY(VARIANT) values);


		[entry("git_oid_fromstr")]
		int git_oid_fromstr(git_oid *out, const char *str);
		[entry("git_oid_fromstrp")]
		int git_oid_fromstrp(git_oid *out, const char *str);
		[entry("git_oid_fromstrn")]
		int git_oid_fromstrn(git_oid *out, const char *str, size_t length);
		[entry("git_oid_fromraw")]
		void git_oid_fromraw(git_oid *out, const unsigned char *raw);
		[entry("git_oid_fmt")]
		void git_oid_fmt(char *out, const git_oid *id);
		[entry("git_oid_nfmt")]
		void git_oid_nfmt(char *out, size_t n, const git_oid *id);
		[entry("git_oid_pathfmt")]
		void git_oid_pathfmt(char *out, const git_oid *id);
		[entry("git_oid_tostr_s")]
		char * git_oid_tostr_s(const git_oid *oid);
		[entry("git_oid_tostr")]
		char * git_oid_tostr(char *out, size_t n, const git_oid *id);
		[entry("git_oid_cpy")]
		void git_oid_cpy(git_oid *out, const git_oid *src);
		[entry("git_oid_cmp")]
		int git_oid_cmp(const git_oid *a, const git_oid *b);
		[entry("git_oid_equal")]
		int git_oid_equal(const git_oid *a, const git_oid *b);
		[entry("git_oid_ncmp")]
		int git_oid_ncmp(const git_oid *a, const git_oid *b, size_t len);
		[entry("git_oid_streq")]
		int git_oid_streq(const git_oid *id, const char *str);
		[entry("git_oid_strcmp")]
		int git_oid_strcmp(const git_oid *id, const char *str);
		[entry("git_oid_iszero")]
		int git_oid_iszero(const git_oid *id);
		[entry("git_oid_shorten_new")]
		git_oid_shorten * git_oid_shorten_new(size_t min_length);
		[entry("git_oid_shorten_add")]
		int git_oid_shorten_add(git_oid_shorten *os, const char *text_id);
		[entry("git_oid_shorten_free")]
		void git_oid_shorten_free(git_oid_shorten *os);

};

};